"""schemas

Revision ID: 4e21a4207a8b
Revises: e4583a17d878
Create Date: 2025-03-15 13:09:13.012214

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "4e21a4207a8b"
down_revision: Union[str, None] = "e4583a17d878"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_chapters_id", table_name="chapters")
    op.drop_table("chapters")
    op.drop_table("book_language")
    op.drop_index("ix_languages_id", table_name="languages")
    op.drop_table("languages")
    op.drop_index("ix_books_id", table_name="books")
    op.drop_table("books")
    op.drop_index("ix_users_email", table_name="users")
    op.drop_index("ix_users_id", table_name="users")
    op.drop_table("users")
    op.drop_table("user_saved_books")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_saved_books",
        sa.Column("user_id", sa.INTEGER(), nullable=True),
        sa.Column("book_id", sa.INTEGER(), nullable=True),
        sa.Column("language_id", sa.INTEGER(), nullable=True),
        sa.ForeignKeyConstraint(
            ["book_id"],
            ["books.id"],
        ),
        sa.ForeignKeyConstraint(
            ["language_id"],
            ["languages.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("email", sa.VARCHAR(), nullable=True),
        sa.Column("hashed_password", sa.VARCHAR(), nullable=True),
        sa.Column("is_admin", sa.BOOLEAN(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_users_id", "users", ["id"], unique=False)
    op.create_index("ix_users_email", "users", ["email"], unique=1)
    op.create_table(
        "books",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("title", sa.VARCHAR(), nullable=False),
        sa.Column("owner_id", sa.INTEGER(), nullable=True),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_books_id", "books", ["id"], unique=False)
    op.create_table(
        "languages",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(), nullable=True),
        sa.Column("abbreviation", sa.VARCHAR(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("abbreviation"),
        sa.UniqueConstraint("name"),
    )
    op.create_index("ix_languages_id", "languages", ["id"], unique=False)
    op.create_table(
        "book_language",
        sa.Column("book_id", sa.INTEGER(), nullable=True),
        sa.Column("language_id", sa.INTEGER(), nullable=True),
        sa.ForeignKeyConstraint(
            ["book_id"],
            ["books.id"],
        ),
        sa.ForeignKeyConstraint(
            ["language_id"],
            ["languages.id"],
        ),
    )
    op.create_table(
        "chapters",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("title", sa.VARCHAR(), nullable=True),
        sa.Column("content", sa.VARCHAR(), nullable=True),
        sa.Column("book_id", sa.INTEGER(), nullable=True),
        sa.Column("language_id", sa.INTEGER(), nullable=True),
        sa.ForeignKeyConstraint(
            ["book_id"],
            ["books.id"],
        ),
        sa.ForeignKeyConstraint(
            ["language_id"],
            ["languages.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_chapters_id", "chapters", ["id"], unique=False)
    # ### end Alembic commands ###
